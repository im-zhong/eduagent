# Date: 2025/7/27
# Authoer: zhangzhong
# Tips:
#   - Pre-commit(https://pre-commit.com/) is a framework for managing and maintaining multi-language pre-commit hooks.
#   - All the rev of repos and version of tools are the latest when this file is created
#   - Make sure the configuration of all these tools are consistent with the [pyproject.toml] file

repos:
  # Some out-of-the-box hooks for pre-commit
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Prevent giant files from being committed
      - id: check-added-large-files
      # Simply check whether files parse as valid python
      - id: check-ast
      # Require literal syntax when initializing empty or zero Python builtin types
      - id: check-builtin-literals
      # Checks for a common error of placing code before the docstring
      - id: check-docstring-first
      # Checks that non-binary executables have a proper shebang
      # - id: check-executables-have-shebangs
      # Attempts to load all json files to verify syntax
      # https://github.com/pre-commit/pre-commit/issues/1320 do not support json with comments
      # - id: check-json
      # Check for files that contain merge conflict strings
      - id: check-merge-conflict
      # Checks that scripts with shebangs are executable
      - id: check-shebang-scripts-are-executable
      # Checks for symlinks which do not point to anything
      - id: check-symlinks
      # Attempts to load all TOML files to verify syntax
      - id: check-toml
      # Ensures that links to vcs websites are permalinks
      - id: check-vcs-permalinks
      # Attempts to load all xml files to verify syntax
      - id: check-xml
      # Attempts to load all yaml files to verify syntax
      - id: check-yaml
      # Makes sure files end in a newline and only a newline
      - id: end-of-file-fixer
      # Trims trailing whitespace
      - id: trailing-whitespace

  # This is a pre-commit hook which verifies that .json files in a repository are valid JSON5.
  # The JSON5 format is similar to JSON, but it permits comments, trailing commas, and more.
  - repo: https://gitlab.com/bmares/check-json5
    rev: v1.0.0
    hooks:
      - id: check-json5

  # Prettier(https://prettier.io/) is an opinionated code formatter
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      # Run prettier on specified file types
      - id: prettier
        types_or: [json, toml, xml, yaml]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.13.0
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix]
        # exclude: retriever.py
      # Run the formatter.
      - id: ruff-format

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.405
    hooks:
      - id: pyright
        additional_dependencies: []
        args: ["--warnings", "--project=pyproject.toml"]
        language: system # 要自己保证 .venv 里装好了 pyright，否则 hook 会失败。
        # exclude: retriever.py
